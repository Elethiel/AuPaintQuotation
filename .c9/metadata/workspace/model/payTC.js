{"changed":true,"filter":false,"title":"payTC.js","tooltip":"/model/payTC.js","value":"var lodash = require(\"lodash\");\nvar util = require('util');\n\n// db.run(\"CREATE TABLE payType (id INTEGER PRIMARY KEY AUTOINCREMENT, label TEXT NOT NULL)\", function(err) { if (err) callback(err, ''); else { console.log('==> done'); callback(err, 'payType'); } });\n\nvar PAYTC = function() {};\n\nPAYTC.prototype.insertUpdate = function(db, tab, param, next, callback) {\n    if (param.TVAId && param.TVAId > 0) {\n        // existing (update)\n        db.run(\"UPDATE \"+tab+\" SET label = ? WHERE id = ?\",\n                [ param.TVALabel, param.TVAPercent, param.TVAId],\n                function(err, row) {\n                    if(err) {\n                        console.log('SQL Error update TVA '+ util.inspect(err, false, null));\n                       next(err);\n                    }\n                    else {\n                        if (this.changes && this.changes > 0)    {\n                            console.log(\"update TVA OK (\" + this.changes + \") : \" + param.TVAId);\n                            callback({msg:\"ok\", TVAId : this.changes});\n                        }\n                        else {\n                            console.log(\"update TVA NOK\");\n                            callback({msg:\"nok\", TVAId: 0});\n                        }\n                    }\n                });\n    } else {\n        // new (insert)\n        db.run(\"INSERT INTO TVA (label, percent) VALUES(?, ?)\",\n                [ param.TVALabel, param.TVAPercent],\n                function(err, row) {\n                    if(err) {\n                        console.log('SQL Error insert TVA '+ util.inspect(err, false, null));\n                       next(err);\n                    }\n                    else {\n                        if (this.lastID)    {\n                            console.log(\"insert TVA OK : \" + this.lastID);\n                            callback({msg:\"ok\", TVAId : this.lastID});\n                        }\n                        else {\n                            console.log(\"insert TVA NOK\");\n                            callback({msg:\"nok\", TVAId: 0});\n                        }\n                    }\n                });\n    }\n};\n\n// data should contains the TVAId\nTVA.prototype.findTVA = function( db, data, next, callback) {\n    if (data.TVAId && data.TVAId > 0) {\n        //console.log(\"** START find TVA \" + data.TVAId);\n        var TVAObj = {};\n        db.get(\"SELECT id, label, percent  FROM TVA WHERE id = ?\", [data.TVAId], function(err, row) {\n            if(err) {\n                console.log('SQL Error findTVA '  + util.inspect(err, false, null));\n                next(err);\n            }\n            else {\n                if (row)    {\n                    lodash.assign(TVAObj, {TVAId: row.id, TVALabel: row.label, TVAPercent: row.percent });\n                    callback(TVAObj);\n                } else {\n                    callback(null);\n                }\n            }\n        });\n    } else callback(null);\n};\n\nTVA.prototype.findAllTVA = function( db, next, callback) {\n    var TVAList = [];\n    db.all(\"SELECT id, label, percent  FROM TVA\", [], function(err, rows) {\n        if(err) {\n            console.log('SQL Error findTVA '  + util.inspect(err, false, null));\n            next(err);\n        }\n        else {\n            if (rows)    {\n                rows.forEach(function(row) {\n                    var TVAObj = {};\n                    lodash.assign(TVAObj, {TVAId: row.id, TVALabel: row.label, TVAPercent: row.percent });\n                    TVAList.push(TVAObj);\n                });\n            }\n                \n            callback(TVAList);\n        }\n    });\n};\n\nmodule.exports = new TVA();\n","undoManager":{"mark":-1,"position":20,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":3,"column":3},"end":{"row":3,"column":216}},"text":"db.run(\"CREATE TABLE tva (id INTEGER PRIMARY KEY AUTOINCREMENT, label TEXT NOT NULL, percent REAL NOT NULL)\", function(err) { if (err) callback(err, ''); else { console.log('==> done'); callback(err, 'tva'); } });"},{"action":"insertText","range":{"start":{"row":3,"column":3},"end":{"row":3,"column":201}},"text":"db.run(\"CREATE TABLE payType (id INTEGER PRIMARY KEY AUTOINCREMENT, label TEXT NOT NULL)\", function(err) { if (err) callback(err, ''); else { console.log('==> done'); callback(err, 'payType'); } });"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":40},"end":{"row":10,"column":54}},"text":", percent = ? "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":40},"end":{"row":10,"column":41}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":5,"column":4},"end":{"row":5,"column":7}},"text":"TVA"},{"action":"insertText","range":{"start":{"row":5,"column":4},"end":{"row":5,"column":5}},"text":"P"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":5},"end":{"row":5,"column":6}},"text":"A"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":6},"end":{"row":5,"column":7}},"text":"Y"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":7},"end":{"row":5,"column":8}},"text":"T"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":8},"end":{"row":5,"column":9}},"text":"C"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":7,"column":0},"end":{"row":7,"column":3}},"text":"TVA"},{"action":"insertText","range":{"start":{"row":7,"column":0},"end":{"row":7,"column":5}},"text":"PAYTC"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":44},"end":{"row":7,"column":45}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":45},"end":{"row":7,"column":46}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":46},"end":{"row":7,"column":47}},"text":"b"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":47},"end":{"row":7,"column":48}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":48},"end":{"row":7,"column":49}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":23},"end":{"row":10,"column":26}},"text":"tva"},{"action":"insertText","range":{"start":{"row":10,"column":23},"end":{"row":10,"column":24}},"text":"\""}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":24},"end":{"row":10,"column":25}},"text":"+"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":25},"end":{"row":10,"column":26}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":26},"end":{"row":10,"column":27}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":27},"end":{"row":10,"column":28}},"text":"b"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":28},"end":{"row":10,"column":29}},"text":"+"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":29},"end":{"row":10,"column":30}},"text":"\""}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":8,"column":14},"end":{"row":8,"column":17},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1406204820268}