# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := lwip
DEFS_Debug := \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-pthread \
	-m64 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti

INCS_Debug := \
	-I/home/ubuntu/.node-gyp/0.10.26/src \
	-I/home/ubuntu/.node-gyp/0.10.26/deps/uv/include \
	-I/home/ubuntu/.node-gyp/0.10.26/deps/v8/include \
	-I$(srcdir)/lib/zlib \
	-I$(srcdir)/lib/jpeg \
	-I$(srcdir)/lib/cimg \
	-I$(srcdir)/lib/png

DEFS_Release := \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-pthread \
	-m64 \
	-O2 \
	-fno-strict-aliasing \
	-fno-tree-vrp \
	-fno-tree-sink \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti

INCS_Release := \
	-I/home/ubuntu/.node-gyp/0.10.26/src \
	-I/home/ubuntu/.node-gyp/0.10.26/deps/uv/include \
	-I/home/ubuntu/.node-gyp/0.10.26/deps/v8/include \
	-I$(srcdir)/lib/zlib \
	-I$(srcdir)/lib/jpeg \
	-I$(srcdir)/lib/cimg \
	-I$(srcdir)/lib/png

OBJS := \
	$(obj).target/$(TARGET)/src/lwip.o \
	$(obj).target/$(TARGET)/src/LwipImage.o \
	$(obj).target/$(TARGET)/lib/jpeg/jmemnobs.o \
	$(obj).target/$(TARGET)/lib/jpeg/jcapimin.o \
	$(obj).target/$(TARGET)/lib/jpeg/jcapistd.o \
	$(obj).target/$(TARGET)/lib/jpeg/jccoefct.o \
	$(obj).target/$(TARGET)/lib/jpeg/jccolor.o \
	$(obj).target/$(TARGET)/lib/jpeg/jcdctmgr.o \
	$(obj).target/$(TARGET)/lib/jpeg/jchuff.o \
	$(obj).target/$(TARGET)/lib/jpeg/jcinit.o \
	$(obj).target/$(TARGET)/lib/jpeg/jcmainct.o \
	$(obj).target/$(TARGET)/lib/jpeg/jcmarker.o \
	$(obj).target/$(TARGET)/lib/jpeg/jcmaster.o \
	$(obj).target/$(TARGET)/lib/jpeg/jcomapi.o \
	$(obj).target/$(TARGET)/lib/jpeg/jcparam.o \
	$(obj).target/$(TARGET)/lib/jpeg/jcprepct.o \
	$(obj).target/$(TARGET)/lib/jpeg/jcsample.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdapimin.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdapistd.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdatadst.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdatasrc.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdcoefct.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdcolor.o \
	$(obj).target/$(TARGET)/lib/jpeg/jddctmgr.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdhuff.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdinput.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdmainct.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdmarker.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdmaster.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdpostct.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdsample.o \
	$(obj).target/$(TARGET)/lib/jpeg/jerror.o \
	$(obj).target/$(TARGET)/lib/jpeg/jfdctflt.o \
	$(obj).target/$(TARGET)/lib/jpeg/jfdctfst.o \
	$(obj).target/$(TARGET)/lib/jpeg/jfdctint.o \
	$(obj).target/$(TARGET)/lib/jpeg/jidctflt.o \
	$(obj).target/$(TARGET)/lib/jpeg/jidctfst.o \
	$(obj).target/$(TARGET)/lib/jpeg/jidctint.o \
	$(obj).target/$(TARGET)/lib/jpeg/jutils.o \
	$(obj).target/$(TARGET)/lib/jpeg/jmemmgr.o \
	$(obj).target/$(TARGET)/lib/jpeg/jcarith.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdarith.o \
	$(obj).target/$(TARGET)/lib/jpeg/jquant1.o \
	$(obj).target/$(TARGET)/lib/jpeg/jquant2.o \
	$(obj).target/$(TARGET)/lib/jpeg/jdmerge.o \
	$(obj).target/$(TARGET)/lib/jpeg/jaricom.o \
	$(obj).target/$(TARGET)/lib/png/png.o \
	$(obj).target/$(TARGET)/lib/png/pngset.o \
	$(obj).target/$(TARGET)/lib/png/pngget.o \
	$(obj).target/$(TARGET)/lib/png/pngrutil.o \
	$(obj).target/$(TARGET)/lib/png/pngtrans.o \
	$(obj).target/$(TARGET)/lib/png/pngwutil.o \
	$(obj).target/$(TARGET)/lib/png/pngread.o \
	$(obj).target/$(TARGET)/lib/png/pngrio.o \
	$(obj).target/$(TARGET)/lib/png/pngwio.o \
	$(obj).target/$(TARGET)/lib/png/pngwrite.o \
	$(obj).target/$(TARGET)/lib/png/pngrtran.o \
	$(obj).target/$(TARGET)/lib/png/pngwtran.o \
	$(obj).target/$(TARGET)/lib/png/pngmem.o \
	$(obj).target/$(TARGET)/lib/png/pngerror.o \
	$(obj).target/$(TARGET)/lib/png/pngpread.o \
	$(obj).target/$(TARGET)/lib/zlib/adler32.o \
	$(obj).target/$(TARGET)/lib/zlib/compress.o \
	$(obj).target/$(TARGET)/lib/zlib/crc32.o \
	$(obj).target/$(TARGET)/lib/zlib/deflate.o \
	$(obj).target/$(TARGET)/lib/zlib/gzclose.o \
	$(obj).target/$(TARGET)/lib/zlib/gzlib.o \
	$(obj).target/$(TARGET)/lib/zlib/gzread.o \
	$(obj).target/$(TARGET)/lib/zlib/gzwrite.o \
	$(obj).target/$(TARGET)/lib/zlib/infback.o \
	$(obj).target/$(TARGET)/lib/zlib/inflate.o \
	$(obj).target/$(TARGET)/lib/zlib/inftrees.o \
	$(obj).target/$(TARGET)/lib/zlib/inffast.o \
	$(obj).target/$(TARGET)/lib/zlib/trees.o \
	$(obj).target/$(TARGET)/lib/zlib/uncompr.o \
	$(obj).target/$(TARGET)/lib/zlib/zutil.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS :=

$(obj).target/lwip.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/lwip.node: LIBS := $(LIBS)
$(obj).target/lwip.node: TOOLSET := $(TOOLSET)
$(obj).target/lwip.node: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(obj).target/lwip.node
# Add target alias
.PHONY: lwip
lwip: $(builddir)/lwip.node

# Copy this to the executable output path.
$(builddir)/lwip.node: TOOLSET := $(TOOLSET)
$(builddir)/lwip.node: $(obj).target/lwip.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/lwip.node
# Short alias for building this executable.
.PHONY: lwip.node
lwip.node: $(obj).target/lwip.node $(builddir)/lwip.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/lwip.node

